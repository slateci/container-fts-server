name: Release
concurrency:
  group: release-${{ github.repository }}

on:
  push:
    tags:
      - 'v*'

env:
  FILE_PATH: "Containerfile"
  IMAGE_NAME: fts-server
  REGISTRY: hub.opensciencegrid.org

jobs:
  lint-scan:
    name: Lint/scan image
    uses: slateci/github-actions/.github/workflows/image-lint-scan.yml@v15
    with:
      file: "${{ env.FILE_PATH }}"

  test:
    name: Test image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: .

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "${{ env.FILE_PATH }}"
          load: true
          target: release-stage
          push: false
          tags: app-image:${{ github.sha }}

      - name: Verify container processes running
        run: >-
          docker exec --tty app-image:${{ github.sha }} env TERM=xterm echo "Hello world"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - lint-scan
      - test

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: .

      - name: Log in to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PASSWORD }}

      - id: metadata
        name: Gather image metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/slate/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Release image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: "${{ env.FILE_PATH }}"
          push: true
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
